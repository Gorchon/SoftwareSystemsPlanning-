// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');
const fs = require('fs');

describe('-1+-1', function () {
    this.timeout(30000);
    let driver;
    let vars;

    if (!fs.existsSync('./screenshots')) {
        fs.mkdirSync('./screenshots');
    }

    beforeEach(async function () {
        const chrome = require('selenium-webdriver/chrome');
        const options = new chrome.Options();
        options.addArguments('--headless', '--no-sandbox', '--disable-dev-shm-usage');
        driver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();
        vars = {};
    });

    afterEach(async function () {
        if (driver) {
            const filename = this.currentTest.fullTitle()
                .replace(/['"]+/g, '')
                .replace(/[^a-z0-9]/gi, '_')
                .toLowerCase();
            const encodedString = await driver.takeScreenshot();
            await fs.promises.writeFile(`./screenshots/${filename}.png`, encodedString, 'base64');
            await driver.quit();
        }
    });

    it('Both Operands Empty', async function() {
        await driver.get("http://127.0.0.1:8000/index.html");
        await driver.manage().window().setRect({ width: 918, height: 1079 });

        // Click Addition button without entering numbers
        await driver.findElement(By.css("button:nth-child(1)")).click();

        // Handle the alert if it appears
        try {
            let alert = await driver.switchTo().alert();
            console.log("Alert detected: " + (await alert.getText()));
            assert.strictEqual(await alert.getText(), "Please enter both numbers.");
            await alert.accept(); // Close the alert
        } catch (e) {
            console.log("No alert found, test might be failing.");
            assert.fail("Expected alert was not found.");
        }

        // Ensure result is unchanged (empty)
        const result = await driver.findElement(By.id("result")).getText();
        assert.strictEqual(result, "Result:");
    });
});
